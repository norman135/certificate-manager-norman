/* tslint:disable */
/* eslint-disable */
/**
 * CertificatesManagerApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateCertificateDTO
 */
export interface CreateCertificateDTO {
    /**
     * 
     * @type {string}
     * @memberof CreateCertificateDTO
     */
    supplierHandle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateCertificateDTO
     */
    certificateTypeHandle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateCertificateDTO
     */
    validFrom?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateCertificateDTO
     */
    validTo?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateCertificateDTO
     */
    document?: string | null;
}

/**
 * Check if a given object implements the CreateCertificateDTO interface.
 */
export function instanceOfCreateCertificateDTO(value: object): value is CreateCertificateDTO {
    return true;
}

export function CreateCertificateDTOFromJSON(json: any): CreateCertificateDTO {
    return CreateCertificateDTOFromJSONTyped(json, false);
}

export function CreateCertificateDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCertificateDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'supplierHandle': json['supplierHandle'] == null ? undefined : json['supplierHandle'],
        'certificateTypeHandle': json['certificateTypeHandle'] == null ? undefined : json['certificateTypeHandle'],
        'validFrom': json['validFrom'] == null ? undefined : json['validFrom'],
        'validTo': json['validTo'] == null ? undefined : json['validTo'],
        'document': json['document'] == null ? undefined : json['document'],
    };
}

export function CreateCertificateDTOToJSON(value?: CreateCertificateDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'supplierHandle': value['supplierHandle'],
        'certificateTypeHandle': value['certificateTypeHandle'],
        'validFrom': value['validFrom'],
        'validTo': value['validTo'],
        'document': value['document'],
    };
}

